@model IEnumerable<CMS.Models.Patients>
@using CMS.Models

@{
    ViewBag.Title = "Index";
}
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>
    <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>
    <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>
</svg>
@if (TempData["Info"] != null)
{
    <div class="alert alert-warning  d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>Information: @TempData["Info"]</div>
    </div>
}
else if (TempData["SuccessInfo"] != null)
{
    <div class="alert alert-success  d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:"><use xlink:href="#check-circle-fill" /></svg>
        <div>Information: @TempData["SuccessInfo"]</div>
    </div>
}

else if (TempData["ErrorInfo"] != null)
{
    <div class="alert alert-danger  d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Info:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>Information: @TempData["ErrorInfo"]</div>
    </div>
}

<div class="d-grid gap-2 d-md-flex justify-content-md-end">
    @Html.ActionLink("Add Patient", "Create", null, new { @class = "btn btn-sm btn-outline-secondary  my-4 me-2 mb-2" })
</div>
<table class="table table-bordered table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.PatientName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PatientAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PatientAge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PatientGender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PatientPhone)
        </th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PatientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PatientAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PatientAge)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PatientGender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PatientPhone)
            </td>
            <td>

                @Html.ActionLink("Edit", "Edit", new { id = item.PatientID }, new { @class = "btn btn-sm btn-outline-secondary" })
                @Html.ActionLink("Details", "Details", new { id = item.PatientID }, new { @class = "btn btn-sm btn-outline-warning" })
                @Html.ActionLink("Delete", "Delete", new { id = item.PatientID }, new { @class = "btn btn-sm btn-outline-danger" })
                @Html.ActionLink("New Appoitment", "MakeNewAppointment", "Appoitment", new { id = item.PatientID }, new { @class = "btn btn-sm btn-outline-primary" })

                <button type="button" class = "btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Make an Appointment</button>
            
            </td>
        </tr>
    }
</table>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Make an Appointment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="container my-3">
                <form class="row g-3 needs-validation" novalidate>
                   
                    <div class="col-md-6">
                        <label for="validationCustom01" class="form-label">Patient</label>
                        <input type="text" class="form-control" id="validationCustom01" disabled value="Patient Name">
                    </div>

                    <div class="col-md-4">
                        <label for="validationCustom02" class="form-label">Doctor</label>
                        @{
                            var doctor = new Doctors().GetDoctors();
                        }
                            @Html.DropDownList("patientId", doctor.Select(e => new SelectListItem(){Text = e.DoctorName, Value = e.DoctorID.ToString() }),"Select a doctor", new {@class =  "form-select"})
                    </div>

                    <div class="col-md-6">
                        <label for="validationCustom03" class="form-label">Amount</label>
                        <input type="number" class="form-control" id="validationCustom03" required>
                        <div class="invalid-feedback">
                            Invalid Number
                        </div>
                    </div>

                    <div class="col-md-6">
                        <label for="validationCustom04" class="form-label">Date</label>
                        <input type="datetime-local" class="form-control" id="validationCustom04" required>
                        <div class="invalid-feedback">
                            Invalid Date
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-outline-success">Save</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')

        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
    })()
</script>